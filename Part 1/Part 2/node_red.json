[
    {
        "id": "05617929c13709b3",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fccea14870245bf0",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3b5296abeed50d6c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "https://test.mosquitto.org/",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "da652884fb1b4403",
        "type": "ui_tab",
        "name": "Medibox",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "09e0dd250a32dee5",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ca0a29b65be747f1",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "da652884fb1b4403",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "efa3effef8b0cd41",
        "type": "ui_group",
        "name": "Main Switch",
        "tab": "da652884fb1b4403",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "de8dd91c93bbe6c8",
        "type": "ui_group",
        "name": "Schedule",
        "tab": "da652884fb1b4403",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7b1156f338369cc9",
        "type": "ui_group",
        "name": "Light Intensity Change",
        "tab": "da652884fb1b4403",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a301cb73e76dad92",
        "type": "ui_group",
        "name": "Servo Motor Controller",
        "tab": "da652884fb1b4403",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c9f7185f2adb0da",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7c1798470d01108c",
        "type": "ui_group",
        "name": "MediBox",
        "tab": "da652884fb1b4403",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7ec7d25b15a350a7",
        "type": "ui_group",
        "name": "Select Medicine Type",
        "tab": "da652884fb1b4403",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b37f7e19af7e4690",
        "type": "ui_group",
        "name": "Schedule Alarm",
        "tab": "da652884fb1b4403",
        "order": 7,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "db6774e403914809",
        "type": "mqtt in",
        "z": "05617929c13709b3",
        "name": "",
        "topic": "ENTC-ADMIN-TEMP",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3b5296abeed50d6c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 640,
        "wires": [
            [
                "6754913107fe7cfd",
                "92d4cd25f1e32511"
            ]
        ]
    },
    {
        "id": "6754913107fe7cfd",
        "type": "ui_gauge",
        "z": "05617929c13709b3",
        "name": "",
        "group": "ca0a29b65be747f1",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{payload}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 430,
        "y": 580,
        "wires": []
    },
    {
        "id": "92d4cd25f1e32511",
        "type": "ui_chart",
        "z": "05617929c13709b3",
        "name": "",
        "group": "ca0a29b65be747f1",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 430,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "dff2640a88e1b10c",
        "type": "ui_switch",
        "z": "05617929c13709b3",
        "name": "Main Switch",
        "label": "switch",
        "tooltip": "",
        "group": "efa3effef8b0cd41",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 40,
        "wires": [
            [
                "b8c00ed2734d5e7a"
            ]
        ]
    },
    {
        "id": "b8c00ed2734d5e7a",
        "type": "mqtt out",
        "z": "05617929c13709b3",
        "name": "",
        "topic": "ENTC-ADMIN-MAIN-ON-OFF",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3b5296abeed50d6c",
        "x": 730,
        "y": 40,
        "wires": []
    },
    {
        "id": "386431739b8982b9",
        "type": "ui_switch",
        "z": "05617929c13709b3",
        "name": "Schedule Switch",
        "label": "switch",
        "tooltip": "",
        "group": "de8dd91c93bbe6c8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "8d2a1ee3f7416070"
            ]
        ]
    },
    {
        "id": "8d2a1ee3f7416070",
        "type": "change",
        "z": "05617929c13709b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "isScheduled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 340,
        "wires": [
            [
                "1cb431d4db447ec8"
            ]
        ]
    },
    {
        "id": "90be2ec8ff29f696",
        "type": "ui_date_picker",
        "z": "05617929c13709b3",
        "name": "",
        "label": "ON",
        "group": "de8dd91c93bbe6c8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 70,
        "y": 400,
        "wires": [
            [
                "d394e9f101f65bcd"
            ]
        ]
    },
    {
        "id": "399258dfc565a06b",
        "type": "ui_text_input",
        "z": "05617929c13709b3",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "de8dd91c93bbe6c8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 80,
        "y": 460,
        "wires": [
            [
                "f5a4586ca4d282e4"
            ]
        ]
    },
    {
        "id": "d394e9f101f65bcd",
        "type": "change",
        "z": "05617929c13709b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "scheduleDate",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 400,
        "wires": [
            [
                "1cb431d4db447ec8"
            ]
        ]
    },
    {
        "id": "f5a4586ca4d282e4",
        "type": "change",
        "z": "05617929c13709b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "scheduleTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "1cb431d4db447ec8"
            ]
        ]
    },
    {
        "id": "1cb431d4db447ec8",
        "type": "function",
        "z": "05617929c13709b3",
        "name": "function 1",
        "func": "let isScheduled = global.get(\"isScheduled\");\nlet scheduleDate = global.get(\"scheduleDate\");\nlet scheduleTime = global.get(\"scheduleTime\");\n\nif (isScheduled && scheduleDate && scheduleTime){\n    let schedule = scheduleDate + scheduleTime;\n\n    if (Date.now() > schedule){\n        return{\n            payload:\"OLDER\"\n        }\n    }\n    else{\n        return{\n            payload:schedule\n        }\n    }\n}\n\nelse if(isScheduled===false){\n    return{\n        payload:\"NOT-SCHEDULED-ON\"\n    }\n}\n\nelse{\n    return{\n        payload:null\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 400,
        "wires": [
            [
                "a13ac0ebc4f97939"
            ]
        ]
    },
    {
        "id": "a13ac0ebc4f97939",
        "type": "switch",
        "z": "05617929c13709b3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "NOT-SCHEDULED-ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OLDER",
                "vt": "str"
            },
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 750,
        "y": 400,
        "wires": [
            [
                "16c50312f195890f"
            ],
            [
                "681d8381ef7dc252"
            ],
            [
                "5252d5cceacb81b9"
            ],
            [
                "a2eec9ed365848b0"
            ]
        ]
    },
    {
        "id": "16c50312f195890f",
        "type": "function",
        "z": "05617929c13709b3",
        "name": "function 2",
        "func": "return{\n    payload:\"NOT\"\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 320,
        "wires": [
            [
                "915db23c2f8dc5f6"
            ]
        ]
    },
    {
        "id": "5252d5cceacb81b9",
        "type": "function",
        "z": "05617929c13709b3",
        "name": "function 3",
        "func": "return{\n    payload:Math.round(msg.payload/1000)\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 380,
        "wires": [
            [
                "915db23c2f8dc5f6"
            ]
        ]
    },
    {
        "id": "681d8381ef7dc252",
        "type": "function",
        "z": "05617929c13709b3",
        "name": "function 4",
        "func": "return{\n    payload:\"Please Enter a Future Time\"\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 440,
        "wires": [
            [
                "7e762c025aee7a56"
            ]
        ]
    },
    {
        "id": "a2eec9ed365848b0",
        "type": "function",
        "z": "05617929c13709b3",
        "name": "function 5",
        "func": "return{\n    payload:\"Please Enter Valid Date and Time\"\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 500,
        "wires": [
            [
                "7e762c025aee7a56"
            ]
        ]
    },
    {
        "id": "7e762c025aee7a56",
        "type": "ui_toast",
        "z": "05617929c13709b3",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 460,
        "wires": []
    },
    {
        "id": "915db23c2f8dc5f6",
        "type": "mqtt out",
        "z": "05617929c13709b3",
        "name": "",
        "topic": "ENTC-ADMIN-SCH-ON",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3b5296abeed50d6c",
        "x": 1150,
        "y": 340,
        "wires": []
    },
    {
        "id": "8cb8e3ab072364bc",
        "type": "mqtt in",
        "z": "05617929c13709b3",
        "name": "ESP-ON-OFF",
        "topic": "ENTC-ADMIN-MAIN-ON-OFF-ESP",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3b5296abeed50d6c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 40,
        "wires": [
            [
                "84abe55873bfaf56"
            ]
        ]
    },
    {
        "id": "4cdcb5cd2eb392e0",
        "type": "mqtt in",
        "z": "05617929c13709b3",
        "name": "SCH-ESP-ON",
        "topic": "ENTC-ADMIN-SCH-ESP-ON",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3b5296abeed50d6c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 240,
        "wires": [
            [
                "3a424cb00aea1c13"
            ]
        ]
    },
    {
        "id": "3a424cb00aea1c13",
        "type": "function",
        "z": "05617929c13709b3",
        "name": "function 6",
        "func": "return{\n    paylaod:msg.paylaod === 1\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "386431739b8982b9"
            ]
        ]
    },
    {
        "id": "84abe55873bfaf56",
        "type": "function",
        "z": "05617929c13709b3",
        "name": "function 7",
        "func": "if(msg.payload===1){\n    return{\n        payload:\"1\"\n    }\n}\nelse{\n    return{\n        payload:\"0\"\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 40,
        "wires": [
            [
                "dff2640a88e1b10c"
            ]
        ]
    },
    {
        "id": "8a853b1c0f830b1a",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 18",
        "func": "\nreturn {\n    payload:\"Select Motor Controller Settings\"\n    }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 560,
        "wires": [
            [
                "bbcf1b76124c0e03"
            ]
        ]
    },
    {
        "id": "25e05694fd8931ad",
        "type": "ui_chart",
        "z": "fccea14870245bf0",
        "name": "",
        "group": "7b1156f338369cc9",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Light Intensity History Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": 1,
        "removeOlderPoints": "200",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1280,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "18672d1789e8c999",
        "type": "ui_gauge",
        "z": "fccea14870245bf0",
        "name": "",
        "group": "7b1156f338369cc9",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Light Intensity Gauge",
        "label": "units",
        "format": "{{payload}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "15",
        "diff": false,
        "className": "",
        "x": 1260,
        "y": 60,
        "wires": []
    },
    {
        "id": "e3fe4211b94da798",
        "type": "ui_text",
        "z": "fccea14870245bf0",
        "group": "7b1156f338369cc9",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Maximum Intensity Side",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1270,
        "y": 140,
        "wires": []
    },
    {
        "id": "3df2d4ff0834e53f",
        "type": "ui_slider",
        "z": "fccea14870245bf0",
        "name": "",
        "label": "Controlling Factor",
        "tooltip": "",
        "group": "a301cb73e76dad92",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "1",
        "step": "0.05",
        "className": "",
        "x": 1710,
        "y": 440,
        "wires": [
            [
                "73f960b332bfcd46",
                "79b6a248b74e7652"
            ]
        ]
    },
    {
        "id": "241a8849d1ee81c8",
        "type": "ui_slider",
        "z": "fccea14870245bf0",
        "name": "",
        "label": "The Minimum Angle",
        "tooltip": "",
        "group": "a301cb73e76dad92",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "120",
        "step": 1,
        "className": "",
        "x": 1720,
        "y": 500,
        "wires": [
            [
                "8228a94be4e8d456",
                "eee2cc93865f1d69"
            ]
        ]
    },
    {
        "id": "18800e1d5e8b8ad9",
        "type": "ui_dropdown",
        "z": "fccea14870245bf0",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "7ec7d25b15a350a7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Type A",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Type B",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Type C",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Custom Medicine",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1340,
        "y": 360,
        "wires": [
            [
                "232416dbd263e14f"
            ]
        ]
    },
    {
        "id": "c34baa70ad1a28b0",
        "type": "range",
        "z": "fccea14870245bf0",
        "minin": "32",
        "maxin": "4063",
        "minout": "0",
        "maxout": "1",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "Intensity Reading",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "658c179951a42f1b"
            ]
        ]
    },
    {
        "id": "3d69f0f28e54fafa",
        "type": "mqtt in",
        "z": "fccea14870245bf0",
        "name": "",
        "topic": "ENTC-ADMIN-LDR-R",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c9f7185f2adb0da",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 80,
        "wires": [
            [
                "c34baa70ad1a28b0"
            ]
        ]
    },
    {
        "id": "bf3a504dfc7c3430",
        "type": "mqtt in",
        "z": "fccea14870245bf0",
        "name": "",
        "topic": "ENTC-ADMIN-LDR-L",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c9f7185f2adb0da",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 140,
        "wires": [
            [
                "a662440b367d5da7"
            ]
        ]
    },
    {
        "id": "658c179951a42f1b",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 8",
        "func": "const value = parseFloat(msg.payload);\nconst invertedValue = 1 - value;\nconst roundedInvertedValue = invertedValue.toFixed(3);\n\nreturn {\n    payload: roundedInvertedValue\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 80,
        "wires": [
            [
                "ab1c6f670b26b164"
            ]
        ]
    },
    {
        "id": "a662440b367d5da7",
        "type": "range",
        "z": "fccea14870245bf0",
        "minin": "32",
        "maxin": "4063",
        "minout": "0",
        "maxout": "1",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "Intensity Reading",
        "x": 350,
        "y": 140,
        "wires": [
            [
                "1b62d56cd45bb3e1"
            ]
        ]
    },
    {
        "id": "1b62d56cd45bb3e1",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 10",
        "func": "const value = parseFloat(msg.payload);\nconst invertedValue = 1 - value;\nconst roundedInvertedValue = invertedValue.toFixed(3);\n\nreturn {\n    payload: roundedInvertedValue\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 140,
        "wires": [
            [
                "4d34d9ba8257323e"
            ]
        ]
    },
    {
        "id": "4d34d9ba8257323e",
        "type": "change",
        "z": "fccea14870245bf0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LDR_L",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 140,
        "wires": [
            [
                "42c439a7772a2bfd",
                "08ee4faf57fbfada"
            ]
        ]
    },
    {
        "id": "ab1c6f670b26b164",
        "type": "change",
        "z": "fccea14870245bf0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LDR_R",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 80,
        "wires": [
            [
                "42c439a7772a2bfd",
                "08ee4faf57fbfada"
            ]
        ]
    },
    {
        "id": "42c439a7772a2bfd",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 9",
        "func": "let LDR_L = global.get(\"LDR_L\");\nlet LDR_R = global.get(\"LDR_R\");\n\nlet maximum =Math.max(LDR_L,LDR_R)\nif (maximum == LDR_L){\n    let sides = \"Left\";\n}\nelse{\n    let sides = \"Right\";\n}\n\n\nreturn{\n    payload: maximum\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 80,
        "wires": [
            [
                "18672d1789e8c999",
                "25e05694fd8931ad"
            ]
        ]
    },
    {
        "id": "08ee4faf57fbfada",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 11",
        "func": "let LDR_L = global.get(\"LDR_L\");\nlet LDR_R = global.get(\"LDR_R\");\nlet sides\nlet maximum = Math.max(LDR_L, LDR_R)\nif (maximum == LDR_L) {\n     sides = \"Left\";\n}\nelse {\n    sides = \"Right\";\n}\n\n\nreturn {\n    payload: sides\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 140,
        "wires": [
            [
                "e3fe4211b94da798"
            ]
        ]
    },
    {
        "id": "232416dbd263e14f",
        "type": "switch",
        "z": "fccea14870245bf0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1470,
        "y": 360,
        "wires": [
            [
                "30ea8dcb3265c30f",
                "702d6a8a220623a9"
            ],
            [
                "8730c9110cb8dc70",
                "80e6c4688815cf4b"
            ],
            [
                "89829391d6037bbc",
                "f340fa0688228272"
            ],
            [
                "241a8849d1ee81c8",
                "3df2d4ff0834e53f",
                "8a853b1c0f830b1a"
            ]
        ]
    },
    {
        "id": "30ea8dcb3265c30f",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 12",
        "func": "\nreturn{\n    payload: 45\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 60,
        "wires": [
            [
                "8228a94be4e8d456",
                "19f438d7d18b2059"
            ]
        ]
    },
    {
        "id": "702d6a8a220623a9",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 13",
        "func": "\nreturn{\n    payload: 0.6\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 100,
        "wires": [
            [
                "73f960b332bfcd46",
                "8e8108b4d68f9928"
            ]
        ]
    },
    {
        "id": "8228a94be4e8d456",
        "type": "mqtt out",
        "z": "fccea14870245bf0",
        "name": "",
        "topic": "ENTC-ADMIN-ANGLE",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9f7185f2adb0da",
        "x": 2120,
        "y": 60,
        "wires": []
    },
    {
        "id": "73f960b332bfcd46",
        "type": "mqtt out",
        "z": "fccea14870245bf0",
        "name": "ENTC-ADMIN-CONTROL",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c9f7185f2adb0da",
        "x": 2130,
        "y": 160,
        "wires": []
    },
    {
        "id": "8730c9110cb8dc70",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 14",
        "func": "\nreturn{\n    payload: 100\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 180,
        "wires": [
            [
                "8228a94be4e8d456",
                "19f438d7d18b2059"
            ]
        ]
    },
    {
        "id": "80e6c4688815cf4b",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 15",
        "func": "\nreturn{\n    payload: 0.2\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 220,
        "wires": [
            [
                "73f960b332bfcd46",
                "8e8108b4d68f9928"
            ]
        ]
    },
    {
        "id": "89829391d6037bbc",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 16",
        "func": "\nreturn{\n    payload: 65\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 300,
        "wires": [
            [
                "8228a94be4e8d456",
                "19f438d7d18b2059"
            ]
        ]
    },
    {
        "id": "f340fa0688228272",
        "type": "function",
        "z": "fccea14870245bf0",
        "name": "function 17",
        "func": "\nreturn{\n    payload: 0.8\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 340,
        "wires": [
            [
                "73f960b332bfcd46",
                "8e8108b4d68f9928"
            ]
        ]
    },
    {
        "id": "79b6a248b74e7652",
        "type": "ui_text",
        "z": "fccea14870245bf0",
        "group": "a301cb73e76dad92",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Control Factor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1960,
        "y": 440,
        "wires": []
    },
    {
        "id": "eee2cc93865f1d69",
        "type": "ui_text",
        "z": "fccea14870245bf0",
        "group": "a301cb73e76dad92",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Minimum Angle",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1960,
        "y": 500,
        "wires": []
    },
    {
        "id": "bbcf1b76124c0e03",
        "type": "ui_toast",
        "z": "fccea14870245bf0",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1850,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "19f438d7d18b2059",
        "type": "ui_text",
        "z": "fccea14870245bf0",
        "group": "7ec7d25b15a350a7",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Control Factor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2080,
        "y": 220,
        "wires": []
    },
    {
        "id": "8e8108b4d68f9928",
        "type": "ui_text",
        "z": "fccea14870245bf0",
        "group": "7ec7d25b15a350a7",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Minimum Angle",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2080,
        "y": 260,
        "wires": []
    }
]